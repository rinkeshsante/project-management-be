name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the project
      - name: Build with Maven
        run: |
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

      # Step 5: Log in to Docker Hub using Access Token
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Step 6: Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/project-management-be:latest .

      # Step 7: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/project-management-be:latest

      - name: Deploy Docker image to EC2
        run: |
          echo "${{ secrets.SSH_KEY }}" > ec2-key.pem
          chmod 400 ec2-key.pem
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          sudo service docker start
          sudo usermod -aG docker $USER
          newgrp docker <<EONG
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/project-management-be:latest
          docker ps -a -q | xargs -r docker stop
          docker ps -a -q | xargs -r docker rm
          docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/project-management-be:latest
          EONG
          EOF
